version: '3.8'

services:
  # PostgreSQL Database
  postgres-prod:
    image: postgres:15-alpine
    container_name: inka-postgres-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-prod-data:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - inka-network
    restart: unless-stopped
    command: postgres -c max_connections=200 -c shared_buffers=256MB -c effective_cache_size=1GB

  # Redis Cache
  redis-prod:
    image: redis:7-alpine
    container_name: inka-redis-prod
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-prod-data:/data
    networks:
      - inka-network
    restart: unless-stopped

  # Application Server
  app-prod:
    build:
      context: .
      dockerfile: docker/production/Dockerfile
    container_name: inka-app-prod
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis-prod:6379
      - PORT=5000
    volumes:
      - ./data/logs:/app/logs
    depends_on:
      - postgres-prod
      - redis-prod
    networks:
      - inka-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: inka-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/letsencrypt
      - ./data/certbot:/var/www/certbot
      - nginx-logs:/var/log/nginx
    depends_on:
      - app-prod
    networks:
      - inka-network
    restart: unless-stopped

  # SSL Certificate Management
  certbot:
    image: certbot/certbot
    container_name: inka-certbot
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./data/certbot:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${EMAIL} --agree-tos --no-eff-email -d ${DOMAIN} -d www.${DOMAIN}
    networks:
      - inka-network

networks:
  inka-network:
    driver: bridge

volumes:
  postgres-prod-data:
  redis-prod-data:
  nginx-logs: